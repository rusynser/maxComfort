{"ast":null,"code":"var _jsxFileName = \"/Users/erzankabaev/Developer/maxComfort/client/src/pages/Room.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Alert } from \"react-bootstrap\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RoomPage = () => {\n  _s();\n  const {\n    buildingId\n  } = useParams();\n  const [temperature, setTemperature] = useState(null);\n  const [building, setBuilding] = useState(null);\n  const [loading, setLoading] = useState(true); // Define loading state here\n\n  useEffect(() => {\n    console.log(\"Fetching temperature...\");\n    // Fetch the temperature from the server\n    axios.get('http://localhost:5002/getTemp').then(response => {\n      console.log(\"Temperature fetched:\", response.data.temp);\n      setTemperature(response.data.temp);\n    }).catch(error => {\n      console.error('Error fetching temperature:', error);\n    });\n    console.log(\"Fetching building data...\");\n    // Fetch the building data from the server\n    axios.get(`http://localhost:5002/buildings/${buildingId}`).then(response => {\n      setBuilding(response.data);\n      setLoading(false); // Set loading to false once data is fetched\n    }).catch(error => {\n      console.error(\"Error fetching building:\", error);\n      setLoading(false); // Set loading to false in case of error\n    });\n  }, [buildingId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      maxWidth: '800px',\n      margin: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Room Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading building data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this) : building ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"Building ID: \", building._id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Current Temperature: \", temperature !== null ? `${temperature}°C` : \"Loading...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }, this), temperature > building.temperatureLimit && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        children: [\"Warning: Temperature exceeds the limit of \", building.temperatureLimit, \"\\xB0C!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => window.location.reload(),\n        children: \"Refresh Temperature\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No building data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(RoomPage, \"tD8yMaJ8nenlgP5g1dhPPluaP78=\", false, function () {\n  return [useParams];\n});\n_c = RoomPage;\nexport default RoomPage;\nvar _c;\n$RefreshReg$(_c, \"RoomPage\");","map":{"version":3,"names":["React","useState","useEffect","Button","Alert","useParams","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","RoomPage","_s","buildingId","temperature","setTemperature","building","setBuilding","loading","setLoading","console","log","get","then","response","data","temp","catch","error","style","padding","maxWidth","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","_id","temperatureLimit","variant","onClick","window","location","reload","_c","$RefreshReg$"],"sources":["/Users/erzankabaev/Developer/maxComfort/client/src/pages/Room.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, Alert } from \"react-bootstrap\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst RoomPage = () => {\n    const { buildingId } = useParams();\n    const [temperature, setTemperature] = useState(null);\n    const [building, setBuilding] = useState(null);\n    const [loading, setLoading] = useState(true);  // Define loading state here\n\n    useEffect(() => {\n        console.log(\"Fetching temperature...\");\n        // Fetch the temperature from the server\n        axios.get('http://localhost:5002/getTemp')\n            .then(response => {\n                console.log(\"Temperature fetched:\", response.data.temp);\n                setTemperature(response.data.temp);\n            })\n            .catch(error => {\n                console.error('Error fetching temperature:', error);\n            });\n\n        console.log(\"Fetching building data...\");\n        // Fetch the building data from the server\n        axios.get(`http://localhost:5002/buildings/${buildingId}`)\n        .then(response => {\n            setBuilding(response.data);\n            setLoading(false);  // Set loading to false once data is fetched\n        })\n        .catch(error => {\n            console.error(\"Error fetching building:\", error);\n            setLoading(false);  // Set loading to false in case of error\n        });\n    }, [buildingId]);\n\n    return (\n        <div style={{ padding: '20px', maxWidth: '800px', margin: 'auto' }}>\n            <h2>Room Page</h2>\n            {loading ? (\n                <p>Loading building data...</p>\n            ) : (\n                building ? (\n                    <>\n                        <h5>Building ID: {building._id}</h5>\n                        <h3>Current Temperature: {temperature !== null ? `${temperature}°C` : \"Loading...\"}</h3>\n                        {temperature > building.temperatureLimit && (\n                            <Alert variant=\"danger\">\n                                Warning: Temperature exceeds the limit of {building.temperatureLimit}°C!\n                            </Alert>\n                        )}\n                        <Button onClick={() => window.location.reload()}>Refresh Temperature</Button>\n                    </>\n                ) : (\n                    <p>No building data available</p>\n                )\n            )}\n        </div>\n    );\n};\n\nexport default RoomPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}