{"ast":null,"code":"var _jsxFileName = \"/Users/erzankabaev/Developer/maxComfort/client/src/pages/Room.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Alert, ListGroup } from \"react-bootstrap\";\nimport { useParams } from \"react-router-dom\";\nimport Buildings from '../building_data.json';\nimport Rooms from '../room_data.json';\nimport CreateRoomForm from '../components/CreateRoomForm';\nimport RoomDetail from '../components/RoomDetail';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoomPage = () => {\n  _s();\n  const {\n    buildingId\n  } = useParams();\n  const selectedBuilding = Buildings.find(building => building.id === parseInt(buildingId));\n  const [showCreateModal, setShowCreateModal] = useState(false);\n  const [showRoomDetail, setShowRoomDetail] = useState(false);\n  const [selectedRoom, setSelectedRoom] = useState(null);\n  const [rooms, setRooms] = useState([]);\n  const [selectedState, setSelectedState] = useState('all');\n  const [selectedPriority, setSelectedPriority] = useState('all');\n  const [loading, setLoading] = useState(true);\n  const [temperature, setTemperature] = useState(null);\n  useEffect(() => {\n    console.log(\"Fetching temperature...\");\n    fetch('http://localhost:5002/getTemp').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const contentType = response.headers.get(\"content-type\");\n      if (contentType && contentType.indexOf(\"application/json\") !== -1) {\n        return response.json();\n      } else {\n        throw new Error(\"Received content is not JSON\");\n      }\n    }).then(data => {\n      setTemperature(data.temp);\n    }).catch(error => {\n      console.error('Error fetching temperature:', error.message);\n      setTemperature(\"Error\");\n    });\n  }, []);\n  const isOverLimit = selectedBuilding && temperature !== null && temperature > selectedBuilding.tempLimit;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      maxWidth: '1450px',\n      margin: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Room Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), buildingId && /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [\"Building ID: \", buildingId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Current Temperature: \", temperature !== null ? `${temperature}°C` : \"Loading...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), isOverLimit && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: [\"Warning: The temperature exceeds the limit of \", selectedBuilding.tempLimit, \"\\xB0C!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => window.location.reload(),\n      children: \"Upload Temperature\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(RoomPage, \"yIJBNhOSc4rBEjNxuY5jU3tYquQ=\", false, function () {\n  return [useParams];\n});\n_c = RoomPage;\nexport default RoomPage;\nvar _c;\n$RefreshReg$(_c, \"RoomPage\");","map":{"version":3,"names":["React","useState","useEffect","Button","Alert","ListGroup","useParams","Buildings","Rooms","CreateRoomForm","RoomDetail","jsxDEV","_jsxDEV","RoomPage","_s","buildingId","selectedBuilding","find","building","id","parseInt","showCreateModal","setShowCreateModal","showRoomDetail","setShowRoomDetail","selectedRoom","setSelectedRoom","rooms","setRooms","selectedState","setSelectedState","selectedPriority","setSelectedPriority","loading","setLoading","temperature","setTemperature","console","log","fetch","then","response","ok","Error","contentType","headers","get","indexOf","json","data","temp","catch","error","message","isOverLimit","tempLimit","style","padding","maxWidth","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","window","location","reload","_c","$RefreshReg$"],"sources":["/Users/erzankabaev/Developer/maxComfort/client/src/pages/Room.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, Alert, ListGroup } from \"react-bootstrap\";\nimport { useParams } from \"react-router-dom\";\nimport Buildings from '../building_data.json';\nimport Rooms from '../room_data.json';\nimport CreateRoomForm from '../components/CreateRoomForm';\nimport RoomDetail from '../components/RoomDetail';\n\nconst RoomPage = () => {\n  const { buildingId } = useParams();\n  const selectedBuilding = Buildings.find((building) => building.id === parseInt(buildingId));\n  const [showCreateModal, setShowCreateModal] = useState(false);\n  const [showRoomDetail, setShowRoomDetail] = useState(false);\n  const [selectedRoom, setSelectedRoom] = useState(null);\n  const [rooms, setRooms] = useState([]);\n  const [selectedState, setSelectedState] = useState('all');\n  const [selectedPriority, setSelectedPriority] = useState('all');\n  const [loading, setLoading] = useState(true);\n  const [temperature, setTemperature] = useState(null);\n\n  useEffect(() => {\n    console.log(\"Fetching temperature...\");\n\n    fetch('http://localhost:5002/getTemp')\n      .then(response => {\n          if (!response.ok) {\n              throw new Error('Network response was not ok');\n          }\n          const contentType = response.headers.get(\"content-type\");\n          if (contentType && contentType.indexOf(\"application/json\") !== -1) {\n              return response.json();\n          } else {\n              throw new Error(\"Received content is not JSON\");\n          }\n      })\n      .then(data => {\n          setTemperature(data.temp);\n      })\n      .catch(error => {\n          console.error('Error fetching temperature:', error.message);\n          setTemperature(\"Error\");\n      });\n  }, []);\n\n  const isOverLimit = selectedBuilding && temperature !== null && temperature > selectedBuilding.tempLimit;\n\n  return (\n    <div style={{ padding: '20px', maxWidth: '1450px', margin: 'auto' }}>\n      <h2>Room Page</h2>\n      {buildingId && <h5>Building ID: {buildingId}</h5>}\n      <h3>Current Temperature: {temperature !== null ? `${temperature}°C` : \"Loading...\"}</h3>\n      {isOverLimit && (\n        <Alert variant=\"danger\">\n          Warning: The temperature exceeds the limit of {selectedBuilding.tempLimit}°C!\n        </Alert>\n      )}\n      <Button onClick={() => window.location.reload()}>Upload Temperature</Button>\n      {/* Остальной код компонента */}\n    </div>\n  );\n};\n\nexport default RoomPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}